<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: resteasy | Geekheads]]></title>
  <link href="http://jacklund.github.io/blog/categories/resteasy/atom.xml" rel="self"/>
  <link href="http://jacklund.github.io/"/>
  <updated>2014-04-16T22:28:21-05:00</updated>
  <id>http://jacklund.github.io/</id>
  <author>
    <name><![CDATA[Jack Lund]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Creating RESTEasy Project with Eclipse and Maven]]></title>
    <link href="http://jacklund.github.io/blog/2013/05/20/Creating-RESTEasy-Project-with-Eclipse-and-Maven/"/>
    <updated>2013-05-20T00:00:00-05:00</updated>
    <id>http://jacklund.github.io/blog/2013/05/20/Creating-RESTEasy-Project-with-Eclipse-and-Maven</id>
    <content type="html"><![CDATA[<p>Handy safety tip: to create a RESTEasy-friendly Maven project in Eclipse, do the following:</p>

<ol>
  <li>Create the project as a simple Maven project</li>
  <li>In the project Properties -&gt; Project Facets, make the project faceted, and select “Dynamic Web Module” (you may get a NullPointerException, but it doesn’t seem to matter). Under “Further Configuration…”, point the WebApp directory to be <code>src/main/webapp</code>, and have it create the <code>web.xml</code> file.</li>
  <li>Under “Web Content Settings”, set the Context root</li>
  <li>Under “Deployment Assembly”, select “Add…”, select “Java Build Path Entries”, and select “Maven Dependencies”. It should put them in <code>WEB-INF/lib</code>.</li>
  <li>Add the code and the dependencies to the <code>pom.xml</code>. Make sure to add the RESTEasy stuff to the <code>web.xml</code> file.</li>
</ol>

<p>You should be able to deploy it from Eclipse into Tomcat without any issues</p>
]]></content>
  </entry>
  
</feed>
